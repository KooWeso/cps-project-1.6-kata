$btn-small: ( //type
    'expand': url('/src/assets/ico/btn/ic_expand.svg'),
    'more': url('/src/assets/ico/btn/ic_more.svg'),
);

$btn-medium: ( //type
    'burger': url('/src/assets/ico/btn/ic_burger.svg'),
    'close': url('/src/assets/ico/btn/ic_close.svg'),
    'call': url('/src/assets/ico/btn/ic_call.svg'),
    'chat': url('/src/assets/ico/btn/ic_chat.svg'),
    'checkstatus': url('/src/assets/ico/btn/ic_checkstatus.svg'),
    'go': url('/src/assets/ico/btn/ic_go.svg'),
    'profile': url('/src/assets/ico/btn/ic_profile.svg'),
    'repair': url('/src/assets/ico/btn/ic_repair.svg'),
    'search': url('/src/assets/ico/btn/ic_search.svg'),
);

$btn-large: ( //type
    'send': url('/src/assets/ico/btn/ic_send.svg'),
    'order': url('/src/assets/ico/btn/ic_order.svg'),
);

@mixin btnGet($type, $name) {
    @if $type==$btn-small {
        &--#{$name} {
            background-image: map-get($type, $name);
        }
    }

    @if $type==$btn-medium {
        &--#{$name} {
            background-image: map-get($type, $name);
        }
    }
}


.btn {
    cursor: pointer;
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;

    &__small {
        display: block;
        width: 1.5rem;
        aspect-ratio: 1/1;

        @each $name in map-keys($btn-small) {
            @include btnGet($btn-small, $name);
        }

    }

    &__medium {
        display: block;
        width: 2.5rem;
        aspect-ratio: 1/1;
        border-radius: 100%;

        // tranzition -->
        transition: filter .1s ease-in-out;

        &:hover,
        &:focus {
            filter: drop-shadow(0 0 .5rem red);
        }

        // <--

        @each $name in map-keys($btn-medium) {
            @include btnGet($btn-medium, $name);
        }

    }

    // large buttons have different sizes, so it's easier without mixin
    &__large {
        display: block;
        height: 2rem;
        aspect-ratio: 3.5/1; // dosen't really do anything

        // tranzition -->
        transition: filter .1s ease-in-out;

        &:hover,
        &:focus {
            filter: drop-shadow(0 0 .5rem red);
        }

        // <--

        &--send {
            width: 8.5rem;
            background-image: map-get($btn-large, 'send');
        }

        &--order {
            width: 7.5rem;
            background-image: map-get($btn-large, 'order');
        }

    }

    &__content-text {
        // for buttons with text
            display: flex;
            align-items: center;
            align-self: flex-start;
    }

    &__content {
        // for buttons with text and swiper
        display: none;

        @media (min-width: 768px) {
            display: flex;
            align-items: center;
            align-self: flex-start;
        }
    }
}